-----------------------
1.1
-----------------------
1) e m a c s SP e x e r 1 . h t m l Enter
2)C-s H T M L Enter
3)C-s s c a v e n g e r Enter M-b
4)C-s s e l f - r e f e r e n t i a l Enter M-b M-b
5)C-s a r r o w Enter M-b
6)C-e
7)C-a
8) Using commands like C-s(Search), C-e(move to end of line), C-a(move to front of line) save a lot of time instead of arrow keys.
9)No I did not use the arrow keys.
10) C-x C-c

-------------------
1.2
--------------------
1)e m a c s SP e x e r 2 . h t m l Enter 
2)M-g g 1 8 Enter C-k
3)C-s D E L E T E Enter C-a C-k
4)C-s < ! M-h backspace
5) C-s < ! C-b C-b C-u 7 C-d
   C-s < ! Enter C-s l M-h C-p backspace 
   C-s < ! C-a C-k
------------------
1.3
----------------
1) e m a c s SP e x e r 3 . h t m l Enter 
2) C-s A s s i g n m e n t 1 C-b C-u 1 C-d 4 2
   C-s A s s i g n m e n t 1 C-b C-u 1 C-d 4 2
3) C-s U T F - 8 backspace backspace backspace backspace backspace U S - A S C I I
4) C-s [ ^ [ : a s c i i : ] ] M-h backspace
5) C-s < / o l >  C-a C-p C-e Enter
6) C-x C-c  d i f f SP e x e r 3 . h t m l a s s i g n . h t m l Enter
--------------
1.4
------------------
1) c a t SP e x e r 2 . h t m l SP e x e r 2 . d i f f SP > e x e r 4 . h t m l
2) e m a c s SP e x e r 4 . h t m l Enter 
3 & 4)	M-> C-r M-h C-w C-g C-g 1 8 C-y 
	M-> C-r D E L C-a C-SP C-e C-w M-g M-g 1 2 9 C-y 
	M-> C-r w i k i M-h C-w M-g M-g 3 4 1 C-y 
	M-> C-r e n d C-a C-SP C-e C-w M-g M-g 4 0 3 C-y 
	M-> C-r O r C-a UP Enter DOWN DOWN DOWN DOWN Enter C-r O r M-h C-w M-g M-g 3 8 9 C-y
	M-> C-r < ! C-SP C-e C-b C-b C-b C-b C-b C-w M-g M-g 3 8 8 C-s g Enter C-y 
5) M-g M-g 4 0 9 Enter C-SP C-e M-> Backspace
6) C-x u
7)- - > M-g M-g 4 0 9 < ! - -
8) C-s < o l > C-s C-s C-s C-s C-s C-s C-s I Found 7 instances of <ol>
   M-< < o l > < o L > M-% Enter y y y y y y y
9) d i f f SP - u SP e x e r 1 . h t m l SP e x e r 4 . h t m l SP > e x e r 4 . d i f f Enter C-x C-c
-----------------
1.5
-----------------
1) e m a c s Enter M-x m a k e - d i r e c t o r y Enter j u n k Enter
2) e m a c s Enter C-x C-f h e l l o . c Enter
3) e m a c s Enter M-x c o m p i l e Enter backspace backspace backspace backspace backspace backspace backspace backspace g c c SP h e l l o . c Enter 
4)C-x b h e l l o - o u t Enter C-u M-! . / a . o u t Enter
5)M-h C-w C-x C-f Backspace Backspace Backspace Backspace Backspace k e y 1 . t x t Enter M-> M-x c l i p b o a r d - y a n k Enter C-x C-c

------
1.6
------
1) C-x b Enter
2)( r a n d o m SP " 30 5 - 0 9 9 - 4 9 5 " ) SP C-j
   The result I got was -1700725470984866929
3) ( s e t q SP x SP ( r a n d o m ) ) C-j 
   ( s e t q SP y SP ( r a n d o m ) ) C-j 
4) ( * SP x SP y ) C-j.  
   The result I got was -1586844687395531952, which was nowhere close to the answer.
5) M-: ( * SP x SP y) Enter
   This time my result I got was -1586844687395531952 (#o247723122501604551520, #x29fa652a0e12d350) and there looks to be no      difference other than two other values.
6) The two random integers aren't truly random in the sense that their representation on the computer has a finite range. As a result, the representation of the arithmetic may have reached its "limit". If it were random then there should be an infinite range of numbers represented but we know thats not how computers work.
7)The probability that the two-variable product is incorrect is pretty high. If we assume (random) was truly random, that would mean our range of numbers is infinite. There are many numbers near infinity and the product of them would be enormous, so big that the problem of overflow will occur. The computer cannot represent infinity as an integer, it has an upper bound. This means we'd only get the upper bound value for each variable used for the product and not actually get the true product value.   